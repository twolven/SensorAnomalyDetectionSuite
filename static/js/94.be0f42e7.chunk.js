(()=>{"use strict";var e={94:(e,t,i)=>{var n=i(9379),s=i(4284);const o=class{constructor(){this.calculateAverageLatency=()=>{if(0===this.faultDetectionStats.detectionLatency.length)return null;return this.faultDetectionStats.detectionLatency.reduce(((e,t)=>e+t),0)/this.faultDetectionStats.detectionLatency.length},this.session=null,this.config=null,this.buffer=[],this.bufferSize=100,this.overlap=50,this.initialized=!1,this.classes=null,this.currentInjectedFault=null,this.faultDetectionStats={truePositives:0,falsePositives:0,falseNegatives:0,detectionLatency:[]}}async initialize(){try{const e=await fetch("/SensorAnomalyDetectionSuite/models/power_grid_model.onnx"),t=await e.arrayBuffer(),i=await fetch("/SensorAnomalyDetectionSuite/models/model_config.json");return this.config=await i.json(),this.bufferSize=this.config.input_shape[0],this.classes=this.config.preprocessing.signal_conditions,this.inputRange=this.config.preprocessing.input_range,this.session=await s.wV.create(t,{executionProviders:["wasm"],graphOptimizationLevel:"all"}),this.initialized=!0,console.log("Inference engine initialized with config:",{inputShape:this.config.input_shape,outputShape:this.config.output_shape,signalConditions:this.classes,samplingRate:this.config.preprocessing.sampling_rate,performanceMetrics:this.config.preprocessing.performance_metrics}),{status:"success",config:{inputSize:this.bufferSize,classes:this.classes,samplingRate:this.config.preprocessing.sampling_rate}}}catch(e){return console.error("Initialization error:",e),{status:"error",message:e.message}}}setInjectedFault(e){this.currentInjectedFault=e?{type:e.type,magnitude:e.magnitude,timestamp:Date.now(),detected:!1}:null,null===this.currentInjectedFault&&(this.faultDetectionStats.lastDetectionTime=null)}preprocessData(e){if(e.length!==this.bufferSize)throw new Error("Data length must be ".concat(this.bufferSize));return console.log("React ML Input:",JSON.stringify({data:Array.from(e),stats:{min:Math.min(...e),max:Math.max(...e),mean:e.reduce(((e,t)=>e+t),0)/e.length,first10:Array.from(e).slice(0,10),last10:Array.from(e).slice(-10)}})),new s.qY("float32",new Float32Array(e),[1,this.bufferSize])}async inference(e){try{const t=(await this.session.run({[this.session.inputNames[0]]:e}))[this.session.outputNames[0]].data,i=Array.from(t);console.log("Raw inference probabilities:",{normal:i[0].toFixed(4),sag:i[1].toFixed(4),swell:i[2].toFixed(4),harmonic:i[3].toFixed(4),interruption:i[4].toFixed(4)});const n=i.indexOf(Math.max(...i)),s=i[n];return 0!==n&&s<.95?{class:"normal",probabilities:i,confidence:i[0],baselinePrecision:this.config.preprocessing.performance_metrics.normal_precision,reliability:i[0]*this.config.preprocessing.performance_metrics.normal_precision}:{class:this.classes[n],probabilities:i,confidence:s,baselinePrecision:this.config.preprocessing.performance_metrics["".concat(this.classes[n].toLowerCase(),"_precision")],reliability:s*this.config.preprocessing.performance_metrics["".concat(this.classes[n].toLowerCase(),"_precision")]}}catch(t){throw console.error("Inference error:",t),t}}analyzeFaultDetection(e){const t=Date.now(),i=(0,n.A)({},e);if(e.confidence<.85)return i.class="normal",i.confidence=e.confidence,i;if(this.currentInjectedFault){const n=e.class.toLowerCase()===this.currentInjectedFault.type.toLowerCase()&&e.confidence>=.85;if(n&&!this.currentInjectedFault.detected){this.currentInjectedFault.detected=!0,this.faultDetectionStats.truePositives++;const n=t-this.currentInjectedFault.timestamp;this.faultDetectionStats.detectionLatency.push(n),i.detectionLatency=n,i.injectionValidation={injectedFault:this.currentInjectedFault.type,detectionCorrect:!0,magnitude:this.currentInjectedFault.magnitude,latency:n,confidence:e.confidence}}else n||"normal"===e.class||(this.faultDetectionStats.falsePositives++,i.injectionValidation={injectedFault:this.currentInjectedFault.type,detectionCorrect:!1,detectedAs:e.class,confidence:e.confidence})}else"normal"!==e.class.toLowerCase()&&(this.faultDetectionStats.falsePositives++,i.injectionValidation={injectedFault:null,detectionCorrect:!1,detectedAs:e.class,confidence:e.confidence});return i.detectionStats={truePositives:this.faultDetectionStats.truePositives,falsePositives:this.faultDetectionStats.falsePositives,averageLatency:this.calculateAverageLatency(),confidence:e.confidence},i}async processSample(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!this.initialized)throw new Error("PowerGridInference not initialized");if(console.log("Processing in PowerGridInference:",{dataLength:e.length,expectedLength:this.bufferSize,hasInjectedFault:!!t}),null!==t&&this.setInjectedFault(t),Array.isArray(e)&&e.length===this.bufferSize)try{const t=this.preprocessData(e),i=await this.inference(t);return this.analyzeFaultDetection(i)}catch(i){throw console.error("Processing error:",i),i}return null}countZeroCrossings(e){let t=0;for(let i=1;i<e.length;i++)(e[i-1]<0&&e[i]>=0||e[i-1]>=0&&e[i]<0)&&t++;return t}},a=self;let r=null,c=null;a.addEventListener("message",(async function(e){const{type:t,payload:i}=e.data;switch(t){case"INIT":try{console.log("Starting inference engine initialization..."),r=new o,console.log("PowerGridInference instance created");const e=await r.initialize();console.log("Initialization result:",e),"success"===e.status?(console.log("Inference engine successfully initialized"),a.postMessage({type:"INIT_SUCCESS",payload:e})):(console.error("Initialization failed:",e),a.postMessage({type:"INIT_ERROR",payload:e}))}catch(s){console.error("Worker initialization error:",{message:s.message,stack:s.stack}),a.postMessage({type:"INIT_ERROR",payload:{message:s.message,stack:s.stack}})}break;case"PROCESS_SAMPLE":var n;if(!r||!r.initialized)return console.log("Inference engine not ready:",{engineExists:!!r,initialized:null===(n=r)||void 0===n?void 0:n.initialized}),void a.postMessage({type:"ERROR",payload:{message:"Inference engine not ready"}});try{if(i.completeWindow){console.log("InferenceWorker received complete window:",{windowLength:i.completeWindow.length,firstSample:i.completeWindow[0],lastSample:i.completeWindow[i.completeWindow.length-1]});const e=await r.processSample(i.completeWindow,i.injectedFault);console.log("Inference result:",e),e?a.postMessage({type:"RESULT",payload:{faultType:e.class,confidence:e.confidence,reliability:e.reliability,probabilities:e.probabilities,baselinePrecision:e.baselinePrecision,injectionValidation:e.injectionValidation,detectionStats:e.detectionStats}}):console.log("No result from inference engine")}else console.log("Received sample without complete window")}catch(s){console.error("Detailed inference error:",{message:s.message,stack:s.stack,payload:i}),a.postMessage({type:"ERROR",payload:{message:s.message,details:s.stack}})}break;case"SET_INJECTED_FAULT":r&&(r.setInjectedFault(i.faultInfo),c=[],a.postMessage({type:"FAULT_INJECTION_UPDATED",payload:{faultInfo:i.faultInfo}}));break;default:console.warn("Unknown message type:",t)}})),a.addEventListener("error",(function(e){console.error("Worker global error:",e),a.postMessage({type:"ERROR",payload:{message:"Worker global error: "+e.message,stack:e.stack}})})),a.addEventListener("unhandledrejection",(function(e){console.error("Unhandled promise rejection:",e.reason),a.postMessage({type:"ERROR",payload:{message:"Unhandled promise rejection: "+e.reason,stack:e.reason.stack}})}))}},t={};function i(n){var s=t[n];if(void 0!==s)return s.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,i),o.exports}i.m=e,i.x=()=>{var e=i.O(void 0,[284],(()=>i(94)));return e=i.O(e)},(()=>{var e=[];i.O=(t,n,s,o)=>{if(!n){var a=1/0;for(d=0;d<e.length;d++){n=e[d][0],s=e[d][1],o=e[d][2];for(var r=!0,c=0;c<n.length;c++)(!1&o||a>=o)&&Object.keys(i.O).every((e=>i.O[e](n[c])))?n.splice(c--,1):(r=!1,o<a&&(a=o));if(r){e.splice(d--,1);var l=s();void 0!==l&&(t=l)}}return t}o=o||0;for(var d=e.length;d>0&&e[d-1][2]>o;d--)e[d]=e[d-1];e[d]=[n,s,o]}})(),i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce(((t,n)=>(i.f[n](e,t),t)),[])),i.u=e=>"static/js/"+e+".ab886646.chunk.js",i.miniCssF=e=>{},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.p="/SensorAnomalyDetectionSuite/",(()=>{i.b=self.location+"/../../../";var e={94:1};i.f.i=(t,n)=>{e[t]||importScripts(i.p+i.u(t))};var t=self.webpackChunksensor_anomaly_detection=self.webpackChunksensor_anomaly_detection||[],n=t.push.bind(t);t.push=t=>{var s=t[0],o=t[1],a=t[2];for(var r in o)i.o(o,r)&&(i.m[r]=o[r]);for(a&&a(i);s.length;)e[s.pop()]=1;n(t)}})(),(()=>{var e=i.x;i.x=()=>i.e(284).then(e)})();i.x()})();
//# sourceMappingURL=94.be0f42e7.chunk.js.map